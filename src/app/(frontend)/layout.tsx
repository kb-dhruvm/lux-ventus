import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import { sanityFetch, SanityLive } from "@/sanity/lib/live";
import { draftMode } from "next/headers";
import { VisualEditing } from "next-sanity";
import { DisableDraftMode } from "@/components/DisableDraftMode";
import { HEADER_QUERY } from "@/queries/layout.query";
import Header from "@/components/layout/Header";
import "@/app/globals.css";
import Footer from "@/components/layout/Footer";

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { data: headerData } = await sanityFetch({ query: HEADER_QUERY });

  if (!headerData) {
    return null;
  }

  const { button, links, enableSearch } = headerData;

  console.log(headerData);

  const _navLinks = links?.map((link) => ({
    slug: link.link!,
    title: link.title!,
  }));

  return (
    <html lang="en">
      <body className={`${poppins.variable} antialiased`}>
        <Header
          navItems={_navLinks}
          showSearch={enableSearch}
          button={
            button
              ? {
                  slug: button.link!,
                  title: button.title!,
                }
              : undefined
          }
        />
        {children}
        <Footer />
        <SanityLive />
        {(await draftMode()).isEnabled && (
          <>
            <DisableDraftMode />
            <VisualEditing />
          </>
        )}
      </body>
    </html>
  );
}
